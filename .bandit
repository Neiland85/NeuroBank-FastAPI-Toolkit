[bandit]
# 🔒 Configuración de Bandit Security Scanner para NeuroBank FastAPI Toolkit
# Versión optimizada para aplicaciones bancarias con alta seguridad

# Excluir directorios que no requieren scanning
exclude_dirs = [
    "/tests",           # Tests pueden usar asserts y mocks
    "/app/tests",       # Tests específicos de la app
    ".venv",            # Entorno virtual
    "venv",             # Alternativa de entorno virtual
    "__pycache__",      # Cache de Python
    ".pytest_cache",    # Cache de pytest
    "node_modules",     # Si hay dependencias JS
    ".git"              # Control de versiones
]

# Saltar tests específicos que son false positives o necesarios
skips = [
    "B101",  # assert_used - Los asserts son normales en tests
    "B601",  # paramiko_calls - No usamos paramiko
    "B602",  # subprocess_popen_with_shell_equals_true - Controlado
    "B603",  # subprocess_without_shell_equals_true - Permitido si es necesario
    "B607",  # start_process_with_partial_path - Paths relativos OK en algunos casos
]

# Nivel de confianza mínimo para reportar (HIGH para production banking)
confidence = "MEDIUM"

# Nivel de severidad (LOW, MEDIUM, HIGH)
severity = "LOW"

# Formato de salida (txt, json, csv, xml)
format = "json"

# Incluir archivos específicos si es necesario
# include = ["*.py"]

# Configurar plugins específicos (opcional)
# plugins = ["B301", "B302"]

# Número máximo de líneas de código por función antes de warning
max_lines_per_function = 100

# Tests adicionales específicos para aplicaciones bancarias
tests = [
    "B102",  # exec_used
    "B103",  # set_bad_file_permissions
    "B104",  # hardcoded_bind_all_interfaces
    "B105",  # hardcoded_password_string
    "B106",  # hardcoded_password_funcarg
    "B107",  # hardcoded_password_default
    "B108",  # hardcoded_tmp_directory
    "B110",  # try_except_pass
    "B112",  # try_except_continue
    "B201",  # flask_debug_true
    "B301",  # pickle
    "B302",  # pickle_loads
    "B303",  # md5
    "B304",  # md5_insecure
    "B305",  # cipher
    "B306",  # mktemp_q
    "B307",  # eval
    "B308",  # mark_safe
    "B309",  # httpsconnection
    "B310",  # urllib_urlopen
    "B311",  # random
    "B312",  # telnetlib
    "B313",  # xml_bad_cElementTree
    "B314",  # xml_bad_ElementTree
    "B315",  # xml_bad_expatreader
    "B316",  # xml_bad_expatbuilder
    "B317",  # xml_bad_sax
    "B318",  # xml_bad_minidom
    "B319",  # xml_bad_pulldom
    "B320",  # xml_bad_etree
    "B321",  # ftplib
    "B322",  # input
    "B323",  # unverified_context
    "B324",  # hashlib_insecure_functions
    "B325",  # tempnam
    "B401",  # import_telnetlib
    "B402",  # import_ftplib
    "B403",  # import_pickle
    "B404",  # import_subprocess
    "B405",  # import_xml_etree
    "B406",  # import_xml_sax
    "B407",  # import_xml_expat
    "B408",  # import_xml_minidom
    "B409",  # import_xml_pulldom
    "B410",  # import_lxml
    "B411",  # import_xmlrpclib
    "B412",  # import_httpoxy
    "B413",  # import_pycrypto
    "B501",  # request_with_no_cert_validation
    "B502",  # ssl_with_bad_version
    "B503",  # ssl_with_bad_defaults
    "B504",  # ssl_with_no_version
    "B505",  # weak_cryptographic_key
    "B506",  # yaml_load
    "B507",  # ssh_no_host_key_verification
    "B601",  # paramiko_calls
    "B602",  # subprocess_popen_with_shell_equals_true
    "B603",  # subprocess_without_shell_equals_true
    "B604",  # any_other_function_with_shell_equals_true
    "B605",  # start_process_with_a_shell
    "B606",  # start_process_with_no_shell
    "B607",  # start_process_with_partial_path
    "B608",  # hardcoded_sql_expressions
    "B609",  # linux_commands_wildcard_injection
    "B610",  # django_extra_used
    "B611",  # django_rawsql_used
    "B701",  # jinja2_autoescape_false
    "B702",  # use_of_mako_templates
    "B703",  # django_mark_safe
]
